{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitichoudhar\\\\Desktop\\\\Assignment\\\\react-assignment\\\\src\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport './Table.css';\nimport * as ReactBootStrap from 'react-bootstrap';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = () => {\n  _s();\n\n  const [data, setData] = useState();\n  const [isLoading, setLoding] = useState(true);\n  const [curPage, setCurPage] = useState(1);\n  const [isError, setError] = useState(false);\n  const columns = [{\n    title: 'NAME',\n    field: 'name',\n    Text: 'bold'\n  }, {\n    title: 'HEIGHT',\n    field: 'height',\n    sorting: false\n  }, {\n    title: 'BODY-MASS',\n    field: 'mass',\n    sorting: false\n  }, {\n    title: 'HAIR-COLOR',\n    field: 'hair_color',\n    sorting: false\n  }, {\n    title: 'SKIN-COLOR',\n    field: 'skin_color',\n    sorting: false\n  }, {\n    title: 'EYE-COLOR',\n    field: 'eye_color',\n    sorting: false\n  }, {\n    title: 'BIRTH-YEAR',\n    field: 'birth_year',\n    sorting: false\n  }, {\n    title: 'GENDER',\n    field: 'gender',\n    sorting: false\n  }, {\n    title: 'SPECIES',\n    field: 'species_icon',\n    sorting: false\n  }];\n\n  const getData = pageNo => {\n    return fetch(`https://swapi.dev/api/people/?page=${pageNo}`).then(resp => resp.json());\n  };\n\n  useEffect(() => {\n    getData(curPage).then(resp => {\n      console.log(resp);\n      setData(resp.results);\n      setLoding(false);\n    }).catch(error => {\n      setError(true);\n    });\n  }, [curPage]);\n  const displayData = data === null || data === void 0 ? void 0 : data.map(element => {\n    let speciesString;\n\n    if (element.species.length > 0) {\n      speciesString = element.species[0];\n\n      if (speciesString === 'https://swapi.dev/api/species/1/') {\n        element.species_icon = /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 32\n        }, this);\n      } else if (speciesString === 'https://swapi.dev/api/species/2/') {\n        element.species_icon = /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-android\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 32\n        }, this);\n      } else element.species_icon = /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fa fas fa-question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 37\n      }, this);\n    } else element.species_icon = /*#__PURE__*/_jsxDEV(\"i\", {\n      class: \"fa fas fa-question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 35\n    }, this);\n\n    return element;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-class\",\n      children: isError ? /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fa fa-exclamation-circle\",\n        \"aria-hidden\": \"true\",\n        children: \"OOPS SOMETHING WENT WRONG!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : isLoading ? /*#__PURE__*/_jsxDEV(ReactBootStrap.Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n          className: \"table-data\",\n          Class: \"m_table\",\n          title: \"PEOPLE'S DATA\",\n          data: displayData,\n          columns: columns,\n          options: {\n            paging: false,\n            pageSize: 10,\n            emptyRowsWhenPaging: true,\n            showFirstLastPageButtons: true,\n            rowStyle: (data, index) => index % 2 === 0 ? null : {\n              background: '#eee'\n            },\n            headerStyle: {\n              backgroundColor: 'purple',\n              color: 'white',\n              fontStyle: 'bold'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button_prev\",\n          value: 'PREVIOUS',\n          changePage: () => {\n            setCurPage(curPage - 1);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button_next\",\n          value: 'NEXT',\n          changePage: () => {\n            setCurPage(curPage + 1);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Table, \"ZfhENia7Prb4dUGjHFCdkBHt8GM=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/nitichoudhar/Desktop/Assignment/react-assignment/src/Table.js"],"names":["React","useState","useEffect","MaterialTable","ReactBootStrap","Button","Table","data","setData","isLoading","setLoding","curPage","setCurPage","isError","setError","columns","title","field","Text","sorting","getData","pageNo","fetch","then","resp","json","console","log","results","catch","error","displayData","map","element","speciesString","species","length","species_icon","paging","pageSize","emptyRowsWhenPaging","showFirstLastPageButtons","rowStyle","index","background","headerStyle","backgroundColor","color","fontStyle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport './Table.css';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport Button from './Button';\r\n\r\nconst Table = () => {\r\n  const [data, setData] = useState();\r\n  const [isLoading, setLoding] = useState(true);\r\n  const [curPage, setCurPage] = useState(1);\r\n  const [isError, setError] = useState(false);\r\n\r\n  const columns = [\r\n    { title: 'NAME', field: 'name', Text: 'bold' },\r\n    { title: 'HEIGHT', field: 'height', sorting: false },\r\n    { title: 'BODY-MASS', field: 'mass', sorting: false },\r\n    { title: 'HAIR-COLOR', field: 'hair_color', sorting: false },\r\n    { title: 'SKIN-COLOR', field: 'skin_color', sorting: false },\r\n    { title: 'EYE-COLOR', field: 'eye_color', sorting: false },\r\n    { title: 'BIRTH-YEAR', field: 'birth_year', sorting: false },\r\n    { title: 'GENDER', field: 'gender', sorting: false },\r\n    { title: 'SPECIES', field: 'species_icon', sorting: false },\r\n  ];\r\n  const getData = (pageNo) => {\r\n    return fetch(`https://swapi.dev/api/people/?page=${pageNo}`).then((resp) =>\r\n      resp.json()\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData(curPage)\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        setData(resp.results);\r\n        setLoding(false);\r\n      })\r\n      .catch((error) => {\r\n        setError(true);\r\n      });\r\n  }, [curPage]);\r\n\r\n  const displayData = data?.map((element) => {\r\n    let speciesString;\r\n    if (element.species.length > 0) {\r\n      speciesString = element.species[0];\r\n      if (speciesString === 'https://swapi.dev/api/species/1/') {\r\n        element.species_icon = <i class='fa fa-circle'></i>;\r\n      } else if (speciesString === 'https://swapi.dev/api/species/2/') {\r\n        element.species_icon = <i class='fa fa-android'></i>;\r\n      } else element.species_icon = <i class='fa fas fa-question'></i>;\r\n    } else element.species_icon = <i class='fa fas fa-question'></i>;\r\n    return element;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className='table-class'>\r\n        {isError ? (\r\n          <i class='fa fa-exclamation-circle' aria-hidden='true'>\r\n            OOPS SOMETHING WENT WRONG!!\r\n          </i>\r\n        ) : isLoading ? (\r\n          <ReactBootStrap.Spinner animation='border' />\r\n        ) : (\r\n          <div className='container'>\r\n            <MaterialTable\r\n              className='table-data'\r\n              Class='m_table'\r\n              title=\"PEOPLE'S DATA\"\r\n              data={displayData}\r\n              columns={columns}\r\n              options={{\r\n                paging: false,\r\n                pageSize: 10,\r\n                emptyRowsWhenPaging: true,\r\n                showFirstLastPageButtons: true,\r\n                rowStyle: (data, index) =>\r\n                  index % 2 === 0 ? null : { background: '#eee' },\r\n                headerStyle: {\r\n                  backgroundColor: 'purple',\r\n                  color: 'white',\r\n                  fontStyle: 'bold',\r\n                },\r\n              }}\r\n            />\r\n            <Button\r\n              className='button_prev'\r\n              value={'PREVIOUS'}\r\n              changePage={() => {\r\n                setCurPage(curPage - 1);\r\n              }}\r\n            />\r\n            <Button\r\n              className='button_next'\r\n              value={'NEXT'}\r\n              changePage={() => {\r\n                setCurPage(curPage + 1);\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n"]},"metadata":{},"sourceType":"module"}